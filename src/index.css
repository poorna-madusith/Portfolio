@tailwind base;
@tailwind components;
@tailwind utilities;

/* Star Animation Styles */
.stars-container {
  @apply absolute inset-0 overflow-hidden pointer-events-none z-10;
}

.star {
  @apply absolute w-0.5 h-0.5 rounded-full;
  background: rgba(255, 255, 255, 0.8);
  filter: blur(1px);
  animation: starFall var(--duration) linear forwards;
}

.star::after {
  content: '';
  @apply absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255,255,255,0.8) 0%, transparent 70%);
  opacity: 0.5;
}

/* Star Animation Styles */
.stars-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  overflow: hidden;
  z-index: 1;
}

.star {
  position: absolute;
  width: 3px;
  height: 3px;
  background: rgba(255, 255, 255, 0.9);
  border-radius: 50%;
  filter: blur(0.5px);
  animation: starFall var(--duration) linear forwards;
  box-shadow: 0 0 3px rgba(255, 255, 255, 0.8);
}

.star::after {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.9) 0%, transparent 70%);
  opacity: 0.7;
}

@keyframes starFall {
  0% {
    transform: translateY(0) translateX(var(--offset-x));
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 0.8;
  }
  100% {
    transform: translateY(var(--fall-distance)) translateX(calc(var(--offset-x) + var(--drift)));
    opacity: 0;
  }
}

@layer base {
  html {
    scroll-behavior: smooth;
  }

  body {
    @apply text-text-primary font-sans bg-secondary;
  }

  h1, h2, h3, h4, h5, h6 {
    @apply text-primary font-heading font-medium;
  }
  
  h1 {
    @apply text-4xl md:text-5xl font-display font-semibold;
  }
  
  h2 {
    @apply text-3xl md:text-4xl;
  }
  
  .section-title {
    @apply font-display font-medium;
  }
  
  .accent-text {
    @apply font-display italic;
  }

  /* Add smooth section transitions */
  section {
    position: relative;
    transition: background-color 0.5s ease;
    overflow: hidden;
  }

  /* Add overlay for section transitions */
  section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 40px;
    background: linear-gradient(to bottom, rgba(0,0,0,0.03), transparent);
    z-index: 1;
    pointer-events: none;
  }

  section::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 40px;
    background: linear-gradient(to top, rgba(0,0,0,0.03), transparent);
    z-index: 1;
    pointer-events: none;
  }
}

@layer components {
  .animate-fade-in {
    animation: fadeIn 0.6s ease-out forwards;
  }

  .animate-slide-in {
    animation: slideIn 0.6s ease-out forwards;
  }

  .animate-scale-in {
    animation: scaleIn 0.5s ease-out forwards;
  }

  .animate-gradient {
    background-size: 200% 200%;
    animation: gradientAnimation 15s ease infinite;
  }

  .animate-color-change {
    background-size: 150% 150%;
    animation: colorChange 10s ease infinite;
    background-image: linear-gradient(to right, #0D1B4D, #00ACC1);
  }

  .animate-slide-left {
    animation: slideLeft 0.3s ease-out forwards;
  }

  .animate-slide-right {
    animation: slideRight 0.3s ease-out forwards;
  }

  .scroll-animate {
    opacity: 0;
  }

  .scroll-animate.animate {
    animation: slideUpFade 0.6s ease forwards;
  }

  .scroll-animate-right {
    opacity: 0;
  }

  .scroll-animate-right.animate {
    animation: slideInRight 0.6s ease forwards;
  }

  .skill-icon {
    @apply transition-all duration-300;
  }

  /* Only apply hover effects in dark mode */
  .dark .skill-icon:hover {
    @apply -translate-y-2 shadow-lg;
    filter: brightness(1.05);
  }

  .project-card {
    @apply transition-all duration-300;
  }

  .project-card:hover {
    @apply -translate-y-1 shadow-lg;
  }

  .float-in {
    opacity: 0;
  }

  .float-in.animate {
    animation: floatUp 0.8s cubic-bezier(0.23, 1, 0.32, 1) forwards;
  }

  .rotate-in {
    opacity: 0;
  }

  .rotate-in.animate {
    animation: rotateIn 0.6s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  }

  .pop-in {
    opacity: 0;
  }

  .pop-in.animate {
    animation: popIn 0.6s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  }

  .blur-in {
    opacity: 0;
  }

  .blur-in.animate {
    animation: blurIn 0.8s cubic-bezier(0.23, 1, 0.32, 1) forwards;
  }

  .stagger-children > * {
    opacity: 0;
  }

  .stagger-children.animate > * {
    animation: floatUp 0.6s cubic-bezier(0.23, 1, 0.32, 1) forwards;
  }

  .stars-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    overflow: hidden;
    z-index: 1;
  }

  .star {
    position: absolute;
    width: 2px;
    height: 2px;
    background: rgba(255, 255, 255, 0.8);
    border-radius: 50%;
    filter: blur(1px);
    animation: starFall var(--duration) linear forwards;
  }

  .star::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255,255,255,0.8) 0%, transparent 70%);
    opacity: 0.5;
  }

  @keyframes starFall {
    0% {
      transform: translateY(0) translateX(var(--offset-x));
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    90% {
      opacity: 0.8;
    }
    100% {
      transform: translateY(var(--fall-distance)) translateX(calc(var(--offset-x) + var(--drift)));
      opacity: 0;
    }
  }
}

@layer utilities {
  .stagger-children.animate > *:nth-child(1) { animation-delay: 0.1s; }
  .stagger-children.animate > *:nth-child(2) { animation-delay: 0.2s; }
  .stagger-children.animate > *:nth-child(3) { animation-delay: 0.3s; }
  .stagger-children.animate > *:nth-child(4) { animation-delay: 0.4s; }
  .stagger-children.animate > *:nth-child(5) { animation-delay: 0.5s; }
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes slideIn {
  from { transform: translateX(-20px); opacity: 0; }
  to { transform: translateX(0); opacity: 1; }
}

@keyframes scaleIn {
  from { transform: scale(0.9); opacity: 0; }
  to { transform: scale(1); opacity: 1; }
}

@keyframes gradientAnimation {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes colorChange {
  0% {
    background-position: 0% 50%;
    background-size: 150% 150%;
  }
  50% {
    background-position: 100% 50%;
    background-size: 200% 200%;
  }
  100% {
    background-position: 0% 50%;
    background-size: 150% 150%;
  }
}

@keyframes slideLeft {
  from { transform: translateX(100%); opacity: 0; }
  to { transform: translateX(0); opacity: 1; }
}

@keyframes slideRight {
  from { transform: translateX(-100%); opacity: 0; }
  to { transform: translateX(0); opacity: 1; }
}

@keyframes slideUpFade {
  from { opacity: 0; transform: translateY(30px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes slideInRight {
  from { opacity: 0; transform: translateX(30px); }
  to { opacity: 1; transform: translateX(0); }
}

@keyframes floatUp {
  from { transform: translateY(100px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

@keyframes parallaxScroll {
  0% { transform: translateY(0); }
  100% { transform: translateY(-20px); }
}

@keyframes sectionFadeIn {
  0% { opacity: 0.85; transform: translateY(10px); }
  100% { opacity: 1; transform: translateY(0); }
}

@keyframes rotateIn {
  from { transform: rotate(-10deg) scale(0.9); opacity: 0; }
  to { transform: rotate(0) scale(1); opacity: 1; }
}

@keyframes popIn {
  0% { transform: scale(0.6); opacity: 0; }
  60% { transform: scale(1.1); }
  100% { transform: scale(1); opacity: 1; }
}

@keyframes blurIn {
  from { 
    filter: blur(10px);
    transform: scale(1.1);
    opacity: 0;
  }
  to {
    filter: blur(0);
    transform: scale(1);
    opacity: 1;
  }
}

/* Section scroll effects */
section {
  animation: sectionFadeIn 0.5s ease-out forwards;
  background-attachment: fixed;
  background-position: center;
  will-change: transform;
}

/* Parallax elements - apply to images or decorative elements */
.parallax-element {
  transition: transform 0.3s ease-out;
  will-change: transform;
}

/* Mobile styles */
@media (max-width: 640px) {
  .project-card {
    @apply mb-6;
  }

  .skill-icon {
    @apply scale-90;
  }

  .modal-content {
    @apply p-4;
  }

  .modal-image {
    @apply max-h-[80vh];
  }

  .project-card a,
  .skill-icon,
  button {
    @apply min-h-[44px] min-w-[44px];
  }

  html {
    @apply text-base;
  }

  .modal-content {
    @apply p-4 m-2 w-[calc(100%-1rem)];
  }
}

/* Touch feedback */
@media (hover: none) {
  .project-card:active,
  .skill-icon:active,
  button:active {
    @apply scale-95 transition-transform duration-100;
  }
}

/* Star Animation Styles */
.stars-container {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  overflow: hidden;
  z-index: 1;
}

.star {
  position: absolute;
  width: 2px;
  height: 2px;
  background: rgba(255, 255, 255, 0.8);
  border-radius: 9999px;
  filter: blur(1px);
  animation: starFall var(--duration) linear forwards;
}

.star::after {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.8) 0%, transparent 70%);
  opacity: 0.5;
}

@keyframes starFall {
  0% {
    transform: translateY(0) translateX(var(--offset-x));
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 0.8;
  }
  100% {
    transform: translateY(var(--fall-distance)) translateX(calc(var(--offset-x) + var(--drift)));
    opacity: 0;
  }
}
